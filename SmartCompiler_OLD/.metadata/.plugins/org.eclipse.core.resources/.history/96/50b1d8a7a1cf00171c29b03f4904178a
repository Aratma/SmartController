//============================================================================
// Name        : TokenTest.h
// Author      :
// Version     :
// Copyright   :
// Description :
//============================================================================

#ifndef TOKENTEST_H_
#define TOKENTEST_H_

#include <cppunit/TestFixture.h>
#include <cppunit/TestAssert.h>
#include <cppunit/TestCaller.h>
#include <cppunit/TestSuite.h>

#include "Token.h"
#include "SourceFile.h"

#define BUFFER_SIZE 1048576 // 1MB


class ScannerTest : public CppUnit::TestFixture
{
public:
	ScannerTest();
	virtual ~ScannerTest();

public:
	static CppUnit::Test *suite()
	   {
	     CppUnit::TestSuite *suiteOfTests = new CppUnit::TestSuite( "TokenTestSuite" );

	     suiteOfTests->addTest( new CppUnit::TestCaller<ScannerTest>("testTheToken", &ScannerTest::testTheToken ) );
	     suiteOfTests->addTest( new CppUnit::TestCaller<ScannerTest>("testSourceFile", &ScannerTest::testSourceFile ) );
	     suiteOfTests->addTest( new CppUnit::TestCaller<ScannerTest>("testScanner", &ScannerTest::testScanner ) );


	     return suiteOfTests;
	   }

public:
	   void setUp();
	   void tearDown();

protected:
	   bool isFileEqual(const std::string& lFilePath, const std::string& rFilePath) const;

protected:
  void testTheToken();
  void testSourceFile();
  void testScanner();

};

#endif /* TOKENTEST_H_ */
