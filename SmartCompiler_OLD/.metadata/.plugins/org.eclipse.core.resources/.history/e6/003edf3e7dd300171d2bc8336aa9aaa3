//============================================================================
// Name        : Token.h
// Author      :
// Version     :
// Copyright   :
// Description :
//============================================================================

#ifndef TOKEN_H_
#define TOKEN_H_

#include <string>

#define MAX_TOK_LEN 64

#define CHAR_NULL 		'\0'
#define CHAR_UNDERSCORE '_'
#define CHAR_COLON 		':'
#define CHAR_EQUAL 		'='
#define CHAR_OPERATOR	"+-:=<>*/&"


using namespace std;


class Token
{
public:
	Token();
	virtual ~Token();

	Token(ETokenType t, const char* pStr);

public:
	Token(const Token &t); 				// copy constructor
	Token& operator= (const Token &t);	// assignment operator

	void initToken();
	void initToken(const Token& t);

public:
	ETokenType getType() { return m_tokType;  }
	void setType (ETokenType t) { m_tokType = t; }
	char* getTextPtr();

	bool appendChar(const char* pCh);

private:
	ETokenType m_tokType;
	char m_tokText[MAX_TOK_LEN];
	short m_curLen;
};




#endif /* TOKEN_H_ */
