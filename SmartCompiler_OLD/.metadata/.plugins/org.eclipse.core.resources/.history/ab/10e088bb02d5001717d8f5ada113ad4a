#ifndef PARSETREE_H_
#define PARSETREE_H_

#include <stdio.h>
#include <map>
#include <string>

using namespace std;

class Token;

enum ENodeType
{
	UNKNOWN_NODE,
};

typedef struct Node
{
	ENodeType m_nodeType;
	int m_pLineNo;
	Token* m_pToken;

	map<string, Node*> m_pFamily;
};


class ParseTree
{
public:
	ParseTree();
	virtual ~ParseTree();

public:
	ParseTree(const ParseTree &t); 				// copy constructor
	ParseTree& operator= (const ParseTree &t);	// assignment operator

public:
	void setLeftChild(Node* p);
	void setRightChild(Node* p);
	void setMidChild(Node* p);
	void setSibling(Node* p);

private:
	Node* m_pNode;
};

#endif /* PARSETREE_H_ */
